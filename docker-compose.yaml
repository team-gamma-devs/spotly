services:
  mongo:
    image: mongo:latest

    container_name: mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongo_data:/data/db
      - mongo_config:/data/configdb
    networks:
      - app_network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    command: >
      --wiredTigerCacheSizeGB 0.25
      --quiet
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 400M
        reservations:
          cpus: '0.25'
          memory: 300M

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    image: backend:${VERSION:-latest}
    container_name: backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      - WORKERS=2
      - LOG_LEVEL=${LOG_LEVEL:-warning}
      - MONGODB_URL=mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:27017
    depends_on:
      mongo:
        condition: service_healthy
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/health', timeout=5)"]
      interval: 60s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '0.4'
          memory: 350M
        reservations:
          cpus: '0.2'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

volumes:
  mongo_data:
    driver: local
  mongo_config:
    driver: local

networks:
  app_network:
<<<<<<< HEAD
    driver: bridge
=======
    driver: bridge
>>>>>>> 09f2b0b (Feat: Added tests for invitation and csv_invitation,)
