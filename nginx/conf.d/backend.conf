server {
    listen 80;
    listen [::]:80;
    server_name spotly.work www.spotly.work;
    
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name spotly.work www.spotly.work;

    # SSL certificates
    ssl_certificate /etc/nginx/certs/fullchain.pem;
    ssl_certificate_key /etc/nginx/certs/privkey.pem;
    
    # SSL config
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:5m;  # Reduced from 10m
    ssl_session_timeout 5m;           # Reduced from 10m
    ssl_session_tickets off;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Limits (CRITICAL for Free Tier)
    client_max_body_size 5M;  # Reduced from 20M
    client_body_timeout 10s;
    client_header_timeout 10s;
    keepalive_timeout 30s;    # Reduced from 65s
    send_timeout 10s;
    
    # Gzip
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 4;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript;
    
    # Logs
    access_log /var/log/nginx/spotly_access.log;
    error_log /var/log/nginx/spotly_error.log warn;
    
    # Health check (no rate limit)
    location /health {
        access_log off;
        proxy_pass http://backend:8000/health;
        proxy_set_header Host $host;
    }
    
    # API endpoints (STRICT rate limiting)
    location /api/ {
        limit_req zone=api_limit burst=10 nodelay;  # 5 req/s + burst 10
        limit_conn conn_limit 5;  # Max 5 concurrent connections
        
        proxy_pass http://backend:8000;
        proxy_http_version 1.1;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts (aggressive for Free Tier)
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Buffering
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }
    
    # Root location (rate limited but more relaxed)
    location / {
        limit_req zone=general_limit burst=20 nodelay;  # 10 req/s + burst 20
        
        proxy_pass http://backend:8000;
        proxy_http_version 1.1;
        
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 20s;
        proxy_send_timeout 20s;
        proxy_read_timeout 20s;
    }
    
    server_tokens off;
}